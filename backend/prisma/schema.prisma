// backend/prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Upload {
  id          Int          @id @default(autoincrement())
  nomeArquivo String
  tipoArquivo String
  dataUpload  DateTime     @default(now())
  
  // Relações nomeadas para evitar ambiguidade
  gastos      Gasto[]      @relation("UploadToGasto")
  faturaItens FaturaItem[] @relation("UploadToFaturaItem")
}

model Gasto {
  id            Int      @id @default(autoincrement())
  data          DateTime
  descricao     String
  custoTotal    Float
  moeda         String
  suaParte      Float
  parteParceiro Float
  origem        String
  categoria     String?
  criadoEm      DateTime @default(now())
  atualizadoEm  DateTime @updatedAt

  // Relação com o Upload (nomeada)
  uploadId      Int?
  upload        Upload?  @relation("UploadToGasto", fields: [uploadId], references: [id])

  // Relação com o FaturaItem (corrigida)
  conciliado    Boolean  @default(false)
  faturaInfo    String?
  faturaItemId  Int?     @unique // Garante que um item de fatura só pode ser ligado a um gasto
  faturaItem    FaturaItem? @relation("GastoToFaturaItem", fields: [faturaItemId], references: [id])
}

model FaturaItem {
  id          Int      @id @default(autoincrement())
  data        DateTime
  lancamento  String
  categoria   String?
  tipo        String?
  valor       Float
  nomeArquivo String
  criadoEm    DateTime @default(now())

  // Relação com o Upload (nomeada)
  uploadId    Int?
  upload      Upload?  @relation("UploadToFaturaItem", fields: [uploadId], references: [id])
  
  // Relação inversa com o Gasto (corrigida)
  Gasto       Gasto?   @relation("GastoToFaturaItem")
}

model Recebimento {
  id          Int       @id @default(autoincrement())
  data        DateTime
  descricao   String
  valor       Float
  origem      String?
  criadoEm    DateTime  @default(now())
  atualizadoEm DateTime @updatedAt
}